using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
using SM.Data.Repositories.Interfaces;
using System.Threading.Tasks;
using SM.Core.Models.Responses;
using SM.Core.Services;
using Microsoft.Pex.Framework.Generated;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace SM.Core.Services.Tests
{
    public partial class ProductServiceTest
    {

[TestMethod]
[PexGeneratedBy(typeof(ProductServiceTest))]
public void GetAsync154()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      ProductService productService;
      Task<ProductResponse> task;
      productService =
        new ProductService((IProductRepository)null, (IVatValueRepository)null);
      task = this.GetAsync(productService, default(Guid), default(Guid));
      disposables.Add((IDisposable)task);
      disposables.Dispose();
      PexAssert.IsNotNull((object)task);
      PexAssert.AreEqual<TaskStatus>(TaskStatus.Faulted, ((Task)task).Status);
      PexAssert.AreEqual<bool>(false, ((Task)task).IsCanceled);
      PexAssert.AreEqual<bool>(false, ((Task)task).IsCompletedSuccessfully);
      PexAssert.IsNull(((Task)task).AsyncState);
      PexAssert.AreEqual<bool>(true, ((Task)task).IsFaulted);
      PexAssert.IsNotNull((object)productService);
    }
}
    }
}
