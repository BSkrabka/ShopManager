using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SM.Data.Models;
using Microsoft.Pex.Framework;
using SM.Data.Repositories.Interfaces;
using SM.Data.Models.Shop;
using SM.Core.Models.Requests;
using SM.Core.Services;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace SM.Core.Services.Tests
{
    public partial class ContrahentServiceTest
    {

[TestMethod]
[PexGeneratedBy(typeof(ContrahentServiceTest))]
        public void MapToEntityModel170()
        {
            ContrahentService contrahentService;
            ContrahentRequest contrahentRequest;
            Contrahent contrahent;
            contrahentService = new ContrahentService((IContrahentRepository)null);
            contrahentRequest = new ContrahentRequest();
            contrahentRequest.Name = "";
            contrahentRequest.Margin = 0;
            contrahent = this.MapToEntityModel(contrahentService, contrahentRequest);
            PexAssert.IsNotNull((object)contrahent);
            PexAssert.AreEqual<string>("", contrahent.Name);
            PexAssert.AreEqual<double>(0, contrahent.Margin);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).CreatedAt.Day);
            PexAssert.AreEqual<DayOfWeek>
                (DayOfWeek.Monday, ((BaseEntity)contrahent).CreatedAt.DayOfWeek);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).CreatedAt.DayOfYear);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Hour);
            PexAssert.AreEqual<DateTimeKind>
                (DateTimeKind.Unspecified, ((BaseEntity)contrahent).CreatedAt.Kind);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Millisecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Microsecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Nanosecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Minute);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).CreatedAt.Month);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).CreatedAt.Second);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).CreatedAt.Year);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).ModifiedAt.Day);
            PexAssert.AreEqual<DayOfWeek>
                (DayOfWeek.Monday, ((BaseEntity)contrahent).ModifiedAt.DayOfWeek);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).ModifiedAt.DayOfYear);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Hour);
            PexAssert.AreEqual<DateTimeKind>
                (DateTimeKind.Unspecified, ((BaseEntity)contrahent).ModifiedAt.Kind);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Millisecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Microsecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Nanosecond);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Minute);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).ModifiedAt.Month);
            PexAssert.AreEqual<int>(0, ((BaseEntity)contrahent).ModifiedAt.Second);
            PexAssert.AreEqual<int>(1, ((BaseEntity)contrahent).ModifiedAt.Year);
            PexAssert.IsNull((object)(((BaseEntity)contrahent).DeletedAt));
            PexAssert.IsNotNull((object)contrahentService);
        }
    }
}
